@model IEnumerable<WebStore.Models.Product>
@{
    ViewBag.Title = "Home";
}

<style>


    .products-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 20px;
        max-width: 800px; /* Reduced max-width for vertical layout */
        margin: 0 auto;
    }

    .product-card {
        background: white;
        border: 1px solid #eee;
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: row; /* Changed to row for horizontal card layout */
        height: 400px; /* Fixed height for each card */
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .product-image-container {
        position: relative;
        width: 200px; /* Fixed width for image container */
        flex-shrink: 0;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-info {
        padding: 15px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .product-name {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 8px;
        color: #333;
    }

    .product-description {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 10px;
        flex-grow: 1;
    }

    .product-price {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2ecc71;
        margin-bottom: 8px;
    }

    .search-filter-container {
        background: white;
        padding: 20px;
        margin: 20px auto;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        max-width: 1200px;
    }

    .section-title {
        text-align: center;
        margin: 30px 0;
        color: #333;
        font-size: 2rem;
    }

    .favorite-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(255,255,255,0.9);
        padding: 5px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .rating {
        color: #ffd700;
        margin-bottom: 8px;
    }
</style>

<div class="search-filter-container mb-4">
    <div class="row">
        <div class="col-md-4">
            <input type="text" id="searchInput" class="form-control" placeholder="Search products...">
        </div>
        <div class="col-md-3">
            <select id="categoryFilter" class="form-control">
                <option value="">All Categories</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select id="sortOrder" class="form-control">
                <option value="">Sort By</option>
                <option value="priceAsc">Price: Low to High</option>
                <option value="priceDesc">Price: High to Low</option>
                <option value="nameAsc">Name: A to Z</option>
                <option value="nameDesc">Name: Z to A</option>
                <option value="ratingDesc">Highest Rated</option>
            </select>
        </div>
    </div>
</div>

<h2 class="section-title">Our Products</h2>

<div id="productsContainer" class="products-container">
    @Html.Partial("_ProductList", Model)
</div>

@section Scripts {
    <script>
    let currentPage = 1;
    let isLoading = false;

    function loadProducts() {
        if (isLoading) return;
        isLoading = true;

        const searchTerm = $('#searchInput').val();
        const categoryId = $('#categoryFilter').val();
        const sortOrder = $('#sortOrder').val();

        $.ajax({
            url: '@Url.Action("GetProductList", "Home")',
            type: 'POST',
            data: {
                searchTerm: searchTerm,
                categoryId: categoryId,
                sortOrder: sortOrder,
                page: currentPage
            },
            success: function (result) {
                if (currentPage === 1) {
                    $('#productsContainer').html(result.html);
                } else {
                    $('#productsContainer').append(result.html);
                }
                isLoading = false;
            },
            error: function () {
                isLoading = false;
            }
        });
    }

    // Event handlers
    $('#searchInput').on('input', debounce(function () {
        currentPage = 1;
        loadProducts();
    }, 500));

    $('#categoryFilter, #sortOrder').change(function () {
        currentPage = 1;
        loadProducts();
    });

    // Infinite scroll
    $(window).scroll(function () {
        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {
            currentPage++;
            loadProducts();
        }
    });

    // Debounce function
    function debounce(func, wait) {
        let timeout;
        return function () {
            const context = this;
            const args = arguments;
            clearTimeout(timeout);
            timeout = setTimeout(function () {
                func.apply(context, args);
            }, wait);
        };
    }
    </script>

}