@model IEnumerable<WebStore.Models.Product>

<style>
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .product-card {
        display: block;
        background: white;
        border-radius: 15px;
        padding: 15px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-decoration: none;
        color: inherit;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }

    .product-image-container {
        width: 100%;
        height: 200px;
        overflow: hidden;
        border-radius: 10px;
        margin-bottom: 15px;
    }

        .product-image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

    .product-card:hover .product-image-container img {
        transform: scale(1.05);
    }

    .product-name {
        font-size: 1.2rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 8px;
    }

    .product-category {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 8px;
    }

    .product-description {
        font-size: 0.9rem;
        color: #777;
        margin-bottom: 12px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .product-price {
        font-size: 1.3rem;
        font-weight: bold;
        color: #2ecc71;
        margin-bottom: 8px;
    }

    .product-rating {
        color: #ffa41b;
        margin-bottom: 8px;
    }

    .product-version {
        font-size: 0.8rem;
        color: #999;
    }

    .product-rating span {
        color: #ffd700;
    }
</style>

<div class="products-grid">
    @foreach (var item in Model)
    {
        <a href="@Url.Action("Details", "Product", new { id = item.ProductId })" class="product-card">
            <div class="product-image-container">
                @if (!string.IsNullOrEmpty(item.ImageList))
                {
                    var images = item.ImageList.Split(',');
                    if (images.Length > 0)
                    {
                        <img src="@Url.Content("~/Content/Images/" + images[0])" alt="@item.ProductName" />
                    }
                }
            </div>
            <div class="product-name">@item.ProductName</div>
            <div class="product-category">Category: @item.Category.CategoryName</div>
            <div class="product-description">@item.Description</div>
            <div class="product-price">$@item.Price.ToString("N2")</div>
            <div class="product-rating">
                Rating: @item.Rating
                @for (int i = 0; i < item.Rating; i++)
                {
                    <span>⭐</span>
                }
            </div>
            <div class="product-version">Version: @item.Version</div>
        </a>
    }
</div>